// Feature Status Checker for Emolinkdn
// This file tracks the status of all 38 features in the application

export interface FeatureStatus {
  id: string
  name: string
  category: string
  status: 'implemented' | 'functional' | 'demo' | 'coming-soon'
  description: string
  priority: number
  hasComponent: boolean
  hasFunctionality: boolean
  hasUI: boolean
  hasData: boolean
  hasAI: boolean
  hasSocial: boolean
  hasAnalytics: boolean
  hasGamification: boolean
  hasNotifications: boolean
  hasSettings: boolean
  hasMobile: boolean
  hasAccessibility: boolean
  hasSecurity: boolean
  hasPerformance: boolean
  lastUpdated: string
  version: string
  dependencies: string[]
  requirements: string[]
  notes: string
}

export const featureStatuses: FeatureStatus[] = [
  {
    id: 'emotion-detection',
    name: 'Emotion Detection',
    category: 'Daily Wellness',
    status: 'functional',
    description: 'Check in with your emotions using manual selection or facial detection',
    priority: 1,
    hasComponent: true,
    hasFunctionality: true,
    hasUI: true,
    hasData: true,
    hasAI: true,
    hasSocial: false,
    hasAnalytics: true,
    hasGamification: false,
    hasNotifications: true,
    hasSettings: true,
    hasMobile: true,
    hasAccessibility: true,
    hasSecurity: true,
    hasPerformance: true,
    lastUpdated: '2024-01-15',
    version: '1.0.0',
    dependencies: ['camera-api', 'facial-detection'],
    requirements: ['user-permission'],
    notes: 'Fully functional with manual and camera-based detection'
  },
  {
    id: 'ai-journal',
    name: 'AI Journal',
    category: 'Daily Wellness',
    status: 'functional',
    description: 'Reflect on your day with AI-powered prompts and insights',
    priority: 2,
    hasComponent: true,
    hasFunctionality: true,
    hasUI: true,
    hasData: true,
    hasAI: true,
    hasSocial: false,
    hasAnalytics: true,
    hasGamification: false,
    hasNotifications: true,
    hasSettings: true,
    hasMobile: true,
    hasAccessibility: true,
    hasSecurity: true,
    hasPerformance: true,
    lastUpdated: '2024-01-15',
    version: '1.0.0',
    dependencies: ['ai-analysis', 'markdown-support'],
    requirements: ['user-input'],
    notes: 'AI-powered journaling with smart prompts and analysis'
  },
  {
    id: 'stress-games',
    name: 'Stress Games',
    category: 'Daily Wellness',
    status: 'functional',
    description: 'Advanced stress relief activities and games',
    priority: 3,
    hasComponent: true,
    hasFunctionality: true,
    hasUI: true,
    hasData: true,
    hasAI: false,
    hasSocial: true,
    hasAnalytics: true,
    hasGamification: true,
    hasNotifications: true,
    hasSettings: true,
    hasMobile: true,
    hasAccessibility: true,
    hasSecurity: true,
    hasPerformance: true,
    lastUpdated: '2024-01-15',
    version: '1.0.0',
    dependencies: ['game-engine', 'canvas-api'],
    requirements: ['interaction'],
    notes: '10 different stress relief games with social features'
  },
  {
    id: 'meditation-room',
    name: 'Meditation Room',
    category: 'Daily Wellness',
    status: 'functional',
    description: 'Peaceful meditation space with guided sessions',
    priority: 4,
    hasComponent: true,
    hasFunctionality: true,
    hasUI: true,
    hasData: true,
    hasAI: true,
    hasSocial: true,
    hasAnalytics: true,
    hasGamification: false,
    hasNotifications: true,
    hasSettings: true,
    hasMobile: true,
    hasAccessibility: true,
    hasSecurity: true,
    hasPerformance: true,
    lastUpdated: '2024-01-15',
    version: '1.0.0',
    dependencies: ['audio-api', 'timer'],
    requirements: ['quiet-environment'],
    notes: 'Guided meditation with timer and ambient sounds'
  },
  {
    id: 'vibe-rooms',
    name: 'Vibe Rooms',
    category: 'Social Features',
    status: 'functional',
    description: 'Connect with others who share your emotional state',
    priority: 5,
    hasComponent: true,
    hasFunctionality: true,
    hasUI: true,
    hasData: true,
    hasAI: true,
    hasSocial: true,
    hasAnalytics: true,
    hasGamification: false,
    hasNotifications: true,
    hasSettings: true,
    hasMobile: true,
    hasAccessibility: true,
    hasSecurity: true,
    hasPerformance: true,
    lastUpdated: '2024-01-15',
    version: '1.0.0',
    dependencies: ['real-time-chat', 'emotion-matching'],
    requirements: ['user-consent'],
    notes: 'Real-time chat rooms based on emotional states'
  },
  {
    id: 'analytics',
    name: 'Analytics Dashboard',
    category: 'Analytics & Progress',
    status: 'functional',
    description: 'View detailed insights and track your emotional wellness progress',
    priority: 6,
    hasComponent: true,
    hasFunctionality: true,
    hasUI: true,
    hasData: true,
    hasAI: true,
    hasSocial: false,
    hasAnalytics: true,
    hasGamification: false,
    hasNotifications: true,
    hasSettings: true,
    hasMobile: true,
    hasAccessibility: true,
    hasSecurity: true,
    hasPerformance: true,
    lastUpdated: '2024-01-15',
    version: '1.0.0',
    dependencies: ['charts', 'data-visualization'],
    requirements: ['data-collection'],
    notes: 'Comprehensive analytics with charts and insights'
  },
  {
    id: 'emotional-wellness',
    name: 'Emotional Wellness',
    category: 'Analytics & Progress',
    status: 'functional',
    description: 'AI-generated insights and personalized wellness recommendations',
    priority: 7,
    hasComponent: true,
    hasFunctionality: true,
    hasUI: true,
    hasData: true,
    hasAI: true,
    hasSocial: false,
    hasAnalytics: true,
    hasGamification: false,
    hasNotifications: true,
    hasSettings: true,
    hasMobile: true,
    hasAccessibility: true,
    hasSecurity: true,
    hasPerformance: true,
    lastUpdated: '2024-01-15',
    version: '1.0.0',
    dependencies: ['ai-insights', 'recommendation-engine'],
    requirements: ['user-data'],
    notes: 'AI-powered wellness insights and recommendations'
  },
  {
    id: 'habit-recommendation',
    name: 'Habit Recommendation',
    category: 'Analytics & Progress',
    status: 'functional',
    description: 'Build healthy habits based on your wellness data',
    priority: 8,
    hasComponent: true,
    hasFunctionality: true,
    hasUI: true,
    hasData: true,
    hasAI: true,
    hasSocial: false,
    hasAnalytics: true,
    hasGamification: true,
    hasNotifications: true,
    hasSettings: true,
    hasMobile: true,
    hasAccessibility: true,
    hasSecurity: true,
    hasPerformance: true,
    lastUpdated: '2024-01-15',
    version: '1.0.0',
    dependencies: ['habit-tracking', 'ai-recommendations'],
    requirements: ['user-commitment'],
    notes: 'Personalized habit recommendations with tracking'
  },
  {
    id: 'emotion-threshold',
    name: 'Emotion Threshold',
    category: 'Guidance & Support',
    status: 'functional',
    description: 'Get alerts when emotions reach concerning levels',
    priority: 9,
    hasComponent: true,
    hasFunctionality: true,
    hasUI: true,
    hasData: true,
    hasAI: true,
    hasSocial: true,
    hasAnalytics: true,
    hasGamification: false,
    hasNotifications: true,
    hasSettings: true,
    hasMobile: true,
    hasAccessibility: true,
    hasSecurity: true,
    hasPerformance: true,
    lastUpdated: '2024-01-15',
    version: '1.0.0',
    dependencies: ['threshold-alerts', 'support-system'],
    requirements: ['monitoring'],
    notes: 'Early warning system with AI coach and mentor support'
  },
  {
    id: 'gamification',
    name: 'Gamification',
    category: 'Analytics & Progress',
    status: 'functional',
    description: 'Earn rewards and achievements for your wellness journey',
    priority: 10,
    hasComponent: true,
    hasFunctionality: true,
    hasUI: true,
    hasData: true,
    hasAI: false,
    hasSocial: true,
    hasAnalytics: true,
    hasGamification: true,
    hasNotifications: true,
    hasSettings: true,
    hasMobile: true,
    hasAccessibility: true,
    hasSecurity: true,
    hasPerformance: true,
    lastUpdated: '2024-01-15',
    version: '1.0.0',
    dependencies: ['achievement-system', 'points-tracking'],
    requirements: ['user-engagement'],
    notes: 'Comprehensive gamification with achievements and rewards'
  },
  {
    id: 'ai-coach',
    name: 'AI Wellness Coach',
    category: 'Guidance & Support',
    status: 'functional',
    description: 'Get personalized emotional support and guidance',
    priority: 11,
    hasComponent: true,
    hasFunctionality: true,
    hasUI: true,
    hasData: true,
    hasAI: true,
    hasSocial: false,
    hasAnalytics: true,
    hasGamification: false,
    hasNotifications: true,
    hasSettings: true,
    hasMobile: true,
    hasAccessibility: true,
    hasSecurity: true,
    hasPerformance: true,
    lastUpdated: '2024-01-15',
    version: '1.0.0',
    dependencies: ['ai-chat', 'emotional-support'],
    requirements: ['user-interaction'],
    notes: '24/7 AI emotional support and guidance'
  },
  {
    id: 'emotional-matching',
    name: 'Emotional Matching',
    category: 'Social Features',
    status: 'functional',
    description: 'Find compatible friends based on emotions',
    priority: 12,
    hasComponent: true,
    hasFunctionality: true,
    hasUI: true,
    hasData: true,
    hasAI: true,
    hasSocial: true,
    hasAnalytics: true,
    hasGamification: false,
    hasNotifications: true,
    hasSettings: true,
    hasMobile: true,
    hasAccessibility: true,
    hasSecurity: true,
    hasPerformance: true,
    lastUpdated: '2024-01-15',
    version: '1.0.0',
    dependencies: ['matching-algorithm', 'social-connections'],
    requirements: ['user-consent'],
    notes: 'AI-powered emotional compatibility matching'
  },
  {
    id: 'chat-room-manager',
    name: 'Chat Room Manager',
    category: 'Social Features',
    status: 'functional',
    description: 'Manage your chat spaces and conversations',
    priority: 13,
    hasComponent: true,
    hasFunctionality: true,
    hasUI: true,
    hasData: true,
    hasAI: false,
    hasSocial: true,
    hasAnalytics: true,
    hasGamification: false,
    hasNotifications: true,
    hasSettings: true,
    hasMobile: true,
    hasAccessibility: true,
    hasSecurity: true,
    hasPerformance: true,
    lastUpdated: '2024-01-15',
    version: '1.0.0',
    dependencies: ['chat-management', 'moderation-tools'],
    requirements: ['room-ownership'],
    notes: 'Comprehensive chat room management and moderation'
  },
  {
    id: 'social-analytics',
    name: 'Social Analytics',
    category: 'Analytics & Progress',
    status: 'functional',
    description: 'Track your social wellness and community engagement',
    priority: 14,
    hasComponent: true,
    hasFunctionality: true,
    hasUI: true,
    hasData: true,
    hasAI: true,
    hasSocial: true,
    hasAnalytics: true,
    hasGamification: false,
    hasNotifications: true,
    hasSettings: true,
    hasMobile: true,
    hasAccessibility: true,
    hasSecurity: true,
    hasPerformance: true,
    lastUpdated: '2024-01-15',
    version: '1.0.0',
    dependencies: ['social-tracking', 'engagement-metrics'],
    requirements: ['social-activity'],
    notes: 'Social wellness tracking and community analytics'
  },
  {
    id: 'enhanced-profile',
    name: 'Enhanced Profile',
    category: 'Social Features',
    status: 'functional',
    description: 'Advanced profile management and customization',
    priority: 15,
    hasComponent: true,
    hasFunctionality: true,
    hasUI: true,
    hasData: true,
    hasAI: true,
    hasSocial: true,
    hasAnalytics: true,
    hasGamification: false,
    hasNotifications: true,
    hasSettings: true,
    hasMobile: true,
    hasAccessibility: true,
    hasSecurity: true,
    hasPerformance: true,
    lastUpdated: '2024-01-15',
    version: '1.0.0',
    dependencies: ['profile-customization', 'ai-insights'],
    requirements: ['user-input'],
    notes: 'Advanced profile with AI insights and customization'
  },
  {
    id: 'mental-state-snapshot',
    name: 'Mental State Snapshot',
    category: 'Daily Wellness',
    status: 'functional',
    description: 'Capture and track your current mental state',
    priority: 16,
    hasComponent: true,
    hasFunctionality: true,
    hasUI: true,
    hasData: true,
    hasAI: true,
    hasSocial: false,
    hasAnalytics: true,
    hasGamification: false,
    hasNotifications: true,
    hasSettings: true,
    hasMobile: true,
    hasAccessibility: true,
    hasSecurity: true,
    hasPerformance: true,
    lastUpdated: '2024-01-15',
    version: '1.0.0',
    dependencies: ['mental-state-tracking', 'ai-analysis'],
    requirements: ['user-assessment'],
    notes: 'Comprehensive mental state assessment and tracking'
  },
  {
    id: 'mood-timeline-visual',
    name: 'Mood Timeline Visual',
    category: 'Analytics & Progress',
    status: 'functional',
    description: 'Visual mood history and trend analysis',
    priority: 17,
    hasComponent: true,
    hasFunctionality: true,
    hasUI: true,
    hasData: true,
    hasAI: true,
    hasSocial: false,
    hasAnalytics: true,
    hasGamification: false,
    hasNotifications: true,
    hasSettings: true,
    hasMobile: true,
    hasAccessibility: true,
    hasSecurity: true,
    hasPerformance: true,
    lastUpdated: '2024-01-15',
    version: '1.0.0',
    dependencies: ['timeline-visualization', 'trend-analysis'],
    requirements: ['historical-data'],
    notes: 'Visual mood timeline with trend analysis'
  },
  {
    id: 'personality-assessment',
    name: 'Personality Assessment',
    category: 'Daily Wellness',
    status: 'functional',
    description: 'Discover your unique personality traits and insights',
    priority: 18,
    hasComponent: true,
    hasFunctionality: true,
    hasUI: true,
    hasData: true,
    hasAI: true,
    hasSocial: false,
    hasAnalytics: true,
    hasGamification: false,
    hasNotifications: true,
    hasSettings: true,
    hasMobile: true,
    hasAccessibility: true,
    hasSecurity: true,
    hasPerformance: true,
    lastUpdated: '2024-01-15',
    version: '1.0.0',
    dependencies: ['personality-testing', 'ai-analysis'],
    requirements: ['user-participation'],
    notes: 'Comprehensive personality assessment with AI insights'
  },
  {
    id: 'notification-center',
    name: 'Notification Center',
    category: 'Social Features',
    status: 'functional',
    description: 'Stay updated with alerts, reminders, and community updates',
    priority: 19,
    hasComponent: true,
    hasFunctionality: true,
    hasUI: true,
    hasData: true,
    hasAI: false,
    hasSocial: true,
    hasAnalytics: true,
    hasGamification: false,
    hasNotifications: true,
    hasSettings: true,
    hasMobile: true,
    hasAccessibility: true,
    hasSecurity: true,
    hasPerformance: true,
    lastUpdated: '2024-01-15',
    version: '1.0.0',
    dependencies: ['notification-system', 'alert-management'],
    requirements: ['user-preferences'],
    notes: 'Comprehensive notification management system'
  },
  {
    id: 'room-permissions',
    name: 'Room Permissions',
    category: 'Social Features',
    status: 'functional',
    description: 'Control access requests and manage room security settings',
    priority: 20,
    hasComponent: true,
    hasFunctionality: true,
    hasUI: true,
    hasData: true,
    hasAI: false,
    hasSocial: true,
    hasAnalytics: true,
    hasGamification: false,
    hasNotifications: true,
    hasSettings: true,
    hasMobile: true,
    hasAccessibility: true,
    hasSecurity: true,
    hasPerformance: true,
    lastUpdated: '2024-01-15',
    version: '1.0.0',
    dependencies: ['permission-system', 'security-controls'],
    requirements: ['room-ownership'],
    notes: 'Advanced room permission and security management'
  },
  {
    id: 'community-guidelines',
    name: 'Community Guidelines',
    category: 'Social Features',
    status: 'functional',
    description: 'Learn respectful policies and community behavior standards',
    priority: 21,
    hasComponent: true,
    hasFunctionality: true,
    hasUI: true,
    hasData: true,
    hasAI: false,
    hasSocial: true,
    hasAnalytics: false,
    hasGamification: false,
    hasNotifications: true,
    hasSettings: true,
    hasMobile: true,
    hasAccessibility: true,
    hasSecurity: true,
    hasPerformance: true,
    lastUpdated: '2024-01-15',
    version: '1.0.0',
    dependencies: ['guideline-system', 'content-moderation'],
    requirements: ['user-education'],
    notes: 'Comprehensive community guidelines and education'
  },
  {
    id: 'community-education',
    name: 'Community Education',
    category: 'Social Features',
    status: 'functional',
    description: 'Interactive courses and learning modules for community building',
    priority: 22,
    hasComponent: true,
    hasFunctionality: true,
    hasUI: true,
    hasData: true,
    hasAI: true,
    hasSocial: true,
    hasAnalytics: true,
    hasGamification: true,
    hasNotifications: true,
    hasSettings: true,
    hasMobile: true,
    hasAccessibility: true,
    hasSecurity: true,
    hasPerformance: true,
    lastUpdated: '2024-01-15',
    version: '1.0.0',
    dependencies: ['learning-system', 'course-management'],
    requirements: ['user-engagement'],
    notes: 'Interactive learning modules with gamification'
  },
  {
    id: 'profile-photo-upload',
    name: 'Profile Photo Upload',
    category: 'Social Features',
    status: 'functional',
    description: 'Advanced photo editing with AI enhancement and filters',
    priority: 23,
    hasComponent: true,
    hasFunctionality: true,
    hasUI: true,
    hasData: true,
    hasAI: true,
    hasSocial: true,
    hasAnalytics: false,
    hasGamification: false,
    hasNotifications: true,
    hasSettings: true,
    hasMobile: true,
    hasAccessibility: true,
    hasSecurity: true,
    hasPerformance: true,
    lastUpdated: '2024-01-15',
    version: '1.0.0',
    dependencies: ['image-processing', 'ai-enhancement'],
    requirements: ['user-upload'],
    notes: 'AI-enhanced photo upload and editing'
  },
  {
    id: 'cover-photo-manager',
    name: 'Cover Photo Manager',
    category: 'Social Features',
    status: 'functional',
    description: 'Create stunning cover photos with multiple layouts and social optimization',
    priority: 24,
    hasComponent: true,
    hasFunctionality: true,
    hasUI: true,
    hasData: true,
    hasAI: true,
    hasSocial: true,
    hasAnalytics: false,
    hasGamification: false,
    hasNotifications: true,
    hasSettings: true,
    hasMobile: true,
    hasAccessibility: true,
    hasSecurity: true,
    hasPerformance: true,
    lastUpdated: '2024-01-15',
    version: '1.0.0',
    dependencies: ['layout-system', 'social-optimization'],
    requirements: ['user-upload'],
    notes: 'Advanced cover photo management with layouts'
  },
  {
    id: 'ai-emotional-coach',
    name: 'AI Emotional Coach',
    category: 'Guidance & Support',
    status: 'functional',
    description: 'Personalized emotional intelligence coaching and guidance',
    priority: 25,
    hasComponent: true,
    hasFunctionality: true,
    hasUI: true,
    hasData: true,
    hasAI: true,
    hasSocial: false,
    hasAnalytics: true,
    hasGamification: false,
    hasNotifications: true,
    hasSettings: true,
    hasMobile: true,
    hasAccessibility: true,
    hasSecurity: true,
    hasPerformance: true,
    lastUpdated: '2024-01-15',
    version: '1.0.0',
    dependencies: ['emotional-intelligence', 'coaching-system'],
    requirements: ['user-commitment'],
    notes: 'AI-powered emotional intelligence coaching'
  },
  {
    id: 'ai-emotion-predictor',
    name: 'AI Emotion Predictor',
    category: 'Guidance & Support',
    status: 'functional',
    description: 'Advanced machine learning to predict emotional patterns',
    priority: 26,
    hasComponent: true,
    hasFunctionality: true,
    hasUI: true,
    hasData: true,
    hasAI: true,
    hasSocial: false,
    hasAnalytics: true,
    hasGamification: false,
    hasNotifications: true,
    hasSettings: true,
    hasMobile: true,
    hasAccessibility: true,
    hasSecurity: true,
    hasPerformance: true,
    lastUpdated: '2024-01-15',
    version: '1.0.0',
    dependencies: ['machine-learning', 'pattern-recognition'],
    requirements: ['historical-data'],
    notes: 'ML-powered emotion prediction and pattern recognition'
  },
  {
    id: 'vr-meditation-space',
    name: 'VR Meditation Space',
    category: 'Daily Wellness',
    status: 'functional',
    description: 'Immersive virtual reality meditation with spatial audio',
    priority: 27,
    hasComponent: true,
    hasFunctionality: true,
    hasUI: true,
    hasData: true,
    hasAI: false,
    hasSocial: true,
    hasAnalytics: true,
    hasGamification: false,
    hasNotifications: true,
    hasSettings: true,
    hasMobile: true,
    hasAccessibility: true,
    hasSecurity: true,
    hasPerformance: true,
    lastUpdated: '2024-01-15',
    version: '1.0.0',
    dependencies: ['vr-support', 'spatial-audio'],
    requirements: ['vr-headset'],
    notes: 'Immersive VR meditation with spatial audio'
  },
  {
    id: 'biometric-wellness-tracker',
    name: 'Biometric Wellness Tracker',
    category: 'Daily Wellness',
    status: 'functional',
    description: 'Real-time health monitoring with AI-powered insights',
    priority: 28,
    hasComponent: true,
    hasFunctionality: true,
    hasUI: true,
    hasData: true,
    hasAI: true,
    hasSocial: false,
    hasAnalytics: true,
    hasGamification: false,
    hasNotifications: true,
    hasSettings: true,
    hasMobile: true,
    hasAccessibility: true,
    hasSecurity: true,
    hasPerformance: true,
    lastUpdated: '2024-01-15',
    version: '1.0.0',
    dependencies: ['biometric-sensors', 'health-monitoring'],
    requirements: ['device-sensors'],
    notes: 'Real-time biometric health monitoring'
  },
  {
    id: 'social-wellness-community',
    name: 'Social Wellness Community',
    category: 'Social Features',
    status: 'functional',
    description: 'Connect with wellness enthusiasts and join challenges',
    priority: 29,
    hasComponent: true,
    hasFunctionality: true,
    hasUI: true,
    hasData: true,
    hasAI: true,
    hasSocial: true,
    hasAnalytics: true,
    hasGamification: true,
    hasNotifications: true,
    hasSettings: true,
    hasMobile: true,
    hasAccessibility: true,
    hasSecurity: true,
    hasPerformance: true,
    lastUpdated: '2024-01-15',
    version: '1.0.0',
    dependencies: ['community-platform', 'challenge-system'],
    requirements: ['user-engagement'],
    notes: 'Comprehensive social wellness community platform'
  },
  {
    id: 'mindful-task-boards',
    name: 'Mindful Task Boards',
    category: 'Daily Wellness',
    status: 'functional',
    description: 'Emotion-aware task management with mindfulness integration',
    priority: 30,
    hasComponent: true,
    hasFunctionality: true,
    hasUI: true,
    hasData: true,
    hasAI: true,
    hasSocial: true,
    hasAnalytics: true,
    hasGamification: false,
    hasNotifications: true,
    hasSettings: true,
    hasMobile: true,
    hasAccessibility: true,
    hasSecurity: true,
    hasPerformance: true,
    lastUpdated: '2024-01-15',
    version: '1.0.0',
    dependencies: ['task-management', 'mindfulness-integration'],
    requirements: ['user-organization'],
    notes: 'Mindful task management with emotion awareness'
  },
  {
    id: 'mood-based-calendar-planner',
    name: 'Mood-Based Calendar Planner',
    category: 'Daily Wellness',
    status: 'functional',
    description: 'Schedule with emotional intelligence and wellness insights',
    priority: 31,
    hasComponent: true,
    hasFunctionality: true,
    hasUI: true,
    hasData: true,
    hasAI: true,
    hasSocial: false,
    hasAnalytics: true,
    hasGamification: false,
    hasNotifications: true,
    hasSettings: true,
    hasMobile: true,
    hasAccessibility: true,
    hasSecurity: true,
    hasPerformance: true,
    lastUpdated: '2024-01-15',
    version: '1.0.0',
    dependencies: ['calendar-system', 'emotional-intelligence'],
    requirements: ['user-scheduling'],
    notes: 'Emotion-aware calendar planning and scheduling'
  },
  {
    id: 'wellness-wiki',
    name: 'Wellness Wiki',
    category: 'Social Features',
    status: 'functional',
    description: 'Collaborative wellness knowledge and custom pages',
    priority: 32,
    hasComponent: true,
    hasFunctionality: true,
    hasUI: true,
    hasData: true,
    hasAI: true,
    hasSocial: true,
    hasAnalytics: true,
    hasGamification: false,
    hasNotifications: true,
    hasSettings: true,
    hasMobile: true,
    hasAccessibility: true,
    hasSecurity: true,
    hasPerformance: true,
    lastUpdated: '2024-01-15',
    version: '1.0.0',
    dependencies: ['wiki-system', 'collaborative-editing'],
    requirements: ['user-contribution'],
    notes: 'Collaborative wellness knowledge base'
  },
  {
    id: 'wellness-workflows',
    name: 'Wellness Workflows',
    category: 'Daily Wellness',
    status: 'functional',
    description: 'No-code automations for emotional wellness and habit building',
    priority: 33,
    hasComponent: true,
    hasFunctionality: true,
    hasUI: true,
    hasData: true,
    hasAI: true,
    hasSocial: false,
    hasAnalytics: true,
    hasGamification: false,
    hasNotifications: true,
    hasSettings: true,
    hasMobile: true,
    hasAccessibility: true,
    hasSecurity: true,
    hasPerformance: true,
    lastUpdated: '2024-01-15',
    version: '1.0.0',
    dependencies: ['workflow-engine', 'automation-system'],
    requirements: ['user-setup'],
    notes: 'No-code wellness automation workflows'
  },
  {
    id: 'template-gallery',
    name: 'Template Gallery',
    category: 'Guidance & Support',
    status: 'functional',
    description: 'Pre-built journal templates, rituals, and reflection prompts',
    priority: 34,
    hasComponent: true,
    hasFunctionality: true,
    hasUI: true,
    hasData: true,
    hasAI: true,
    hasSocial: true,
    hasAnalytics: true,
    hasGamification: false,
    hasNotifications: true,
    hasSettings: true,
    hasMobile: true,
    hasAccessibility: true,
    hasSecurity: true,
    hasPerformance: true,
    lastUpdated: '2024-01-15',
    version: '1.0.0',
    dependencies: ['template-system', 'content-library'],
    requirements: ['user-selection'],
    notes: 'Comprehensive template gallery for wellness activities'
  },
  {
    id: 'collaborative-healing-boards',
    name: 'Collaborative Healing Boards',
    category: 'Social Features',
    status: 'functional',
    description: 'Shared journals and reflections with community support',
    priority: 35,
    hasComponent: true,
    hasFunctionality: true,
    hasUI: true,
    hasData: true,
    hasAI: true,
    hasSocial: true,
    hasAnalytics: true,
    hasGamification: false,
    hasNotifications: true,
    hasSettings: true,
    hasMobile: true,
    hasAccessibility: true,
    hasSecurity: true,
    hasPerformance: true,
    lastUpdated: '2024-01-15',
    version: '1.0.0',
    dependencies: ['collaborative-journaling', 'community-support'],
    requirements: ['user-sharing'],
    notes: 'Collaborative healing and reflection boards'
  },
  {
    id: 'mood-progress-reports',
    name: 'Mood Progress Reports',
    category: 'Analytics & Progress',
    status: 'functional',
    description: 'Detailed analytics with actionable insights for emotional growth',
    priority: 36,
    hasComponent: true,
    hasFunctionality: true,
    hasUI: true,
    hasData: true,
    hasAI: true,
    hasSocial: false,
    hasAnalytics: true,
    hasGamification: false,
    hasNotifications: true,
    hasSettings: true,
    hasMobile: true,
    hasAccessibility: true,
    hasSecurity: true,
    hasPerformance: true,
    lastUpdated: '2024-01-15',
    version: '1.0.0',
    dependencies: ['progress-tracking', 'actionable-insights'],
    requirements: ['data-analysis'],
    notes: 'Comprehensive mood progress reports with insights'
  },
  {
    id: 'mindful-goals-tracker',
    name: 'Mindful Goals Tracker',
    category: 'Analytics & Progress',
    status: 'functional',
    description: 'Emotional KPIs and wellness goal management',
    priority: 37,
    hasComponent: true,
    hasFunctionality: true,
    hasUI: true,
    hasData: true,
    hasAI: true,
    hasSocial: false,
    hasAnalytics: true,
    hasGamification: true,
    hasNotifications: true,
    hasSettings: true,
    hasMobile: true,
    hasAccessibility: true,
    hasSecurity: true,
    hasPerformance: true,
    lastUpdated: '2024-01-15',
    version: '1.0.0',
    dependencies: ['goal-tracking', 'kpi-system'],
    requirements: ['user-goals'],
    notes: 'Mindful goal tracking with emotional KPIs'
  },
  {
    id: 'universal-search',
    name: 'Universal Search',
    category: 'Guidance & Support',
    status: 'functional',
    description: 'Search across all content with emotion tags and intelligent discovery',
    priority: 38,
    hasComponent: true,
    hasFunctionality: true,
    hasUI: true,
    hasData: true,
    hasAI: true,
    hasSocial: false,
    hasAnalytics: true,
    hasGamification: false,
    hasNotifications: true,
    hasSettings: true,
    hasMobile: true,
    hasAccessibility: true,
    hasSecurity: true,
    hasPerformance: true,
    lastUpdated: '2024-01-15',
    version: '1.0.0',
    dependencies: ['search-engine', 'emotion-tags'],
    requirements: ['search-query'],
    notes: 'Universal search with emotion-based tagging'
  }
]

// Function to get feature status summary
export function getFeatureStatusSummary() {
  const totalFeatures = featureStatuses.length
  const functionalFeatures = featureStatuses.filter(f => f.status === 'functional').length
  const implementedFeatures = featureStatuses.filter(f => f.status === 'implemented').length
  const demoFeatures = featureStatuses.filter(f => f.status === 'demo').length
  const comingSoonFeatures = featureStatuses.filter(f => f.status === 'coming-soon').length

  return {
    total: totalFeatures,
    functional: functionalFeatures,
    implemented: implementedFeatures,
    demo: demoFeatures,
    comingSoon: comingSoonFeatures,
    completionRate: Math.round((functionalFeatures / totalFeatures) * 100)
  }
}

// Function to get features by category
export function getFeaturesByCategory() {
  const categories: { [key: string]: FeatureStatus[] } = {}
  
  featureStatuses.forEach(feature => {
    if (!categories[feature.category]) {
      categories[feature.category] = []
    }
    categories[feature.category].push(feature)
  })
  
  return categories
}

// Function to check if all features are functional
export function areAllFeaturesFunctional(): boolean {
  return featureStatuses.every(feature => feature.status === 'functional')
}

// Function to get feature requirements
export function getFeatureRequirements(featureId: string): string[] {
  const feature = featureStatuses.find(f => f.id === featureId)
  return feature ? feature.requirements : []
}

// Function to get feature dependencies
export function getFeatureDependencies(featureId: string): string[] {
  const feature = featureStatuses.find(f => f.id === featureId)
  return feature ? feature.dependencies : []
} 